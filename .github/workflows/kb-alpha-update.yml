name: Auto Update

permissions:
  contents: write
  issues: write

on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * 2" # Every Tuesday at 00:00 UTC

jobs:
  auto-update:
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
    - name: Install Ollama
      run: |
        curl -fsSL https://ollama.com/install.sh | sh
        nohup ollama serve > ollama.log 2>&1 &
        # Espera atÃ© o servidor responder
        for i in {1..20}; do
          if curl -s http://127.0.0.1:11434/api/tags >/dev/null; then
            echo "Ollama server is up!"
            break
          fi
          echo "Waiting for Ollama..."
          sleep 3
        done


    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0

    - name: Configure Git
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: stable

    - name: Install Kubebuilder
      run: |
        curl -L -o kubebuilder "https://go.kubebuilder.io/dl/latest/$(go env GOOS)/$(go env GOARCH)"
        chmod +x kubebuilder
        sudo mv kubebuilder /usr/local/bin/
        kubebuilder version

    - name: Run kubebuilder alpha update
      run: |
        kubebuilder alpha update \
          --force \
          --push \
          --restore-path .github/workflows \
          --open-gh-issue

    - name: Find latest update issue
      id: find-issue
      run: |
        issue_number=$(gh issue list --state open --limit 50 \
          --json number,title,createdAt \
          --jq 'map(select(.title|test("^\\[Action Required\\] Upgrade the Scaffold: "))) | sort_by(.createdAt) | last.number // empty')
        echo "issue_number=$issue_number" >> "$GITHUB_OUTPUT"

    - name: Create patch diff
      if: steps.find-issue.outputs.issue_number != ''
      run: |
        git show --no-color --unified=0 --pretty=format: --no-renames HEAD > update.patch
        head -c 200000 update.patch > update.patch.trim

    - name: Build prompt for Ollama
      if: steps.find-issue.outputs.issue_number != ''
      run: |
        cat > prompt.txt <<'EOF'
        You are a concise change summarization assistant.

        Task:
        Summarize the provided unified diff (single commit from an automated Kubebuilder alpha scaffold update) for a GitHub issue comment.

        Include:
        1. One-line overview (what & why).
        2. Bullet list of notable changes grouped roughly by directory or concern.
        3. Note any occurrences of conflict markers if present (e.g., <<<<<<<).
        4. Quick checklist:
           - [ ] Build & generate succeed
           - [ ] Tests pass
           - [ ] Manual review of CRD / RBAC changes
        5. Keep <= 170 words. No raw diff. Markdown only.

        ---- DIFF BELOW ----
        EOF
        cat update.patch.trim >> prompt.txt

    - name: Generate summary with Ollama
      id: model
      if: steps.find-issue.outputs.issue_number != ''
      run: |
        ollama pull gemma3:270m
        response=$(ollama run gemma3:270m < prompt.txt)
        if [ -z "$response" ]; then
          response="Automated summary unavailable. Please review the diff."
        fi
        echo "$response" > COMMENT.md
        echo "chars=$(wc -c < COMMENT.md)" >> "$GITHUB_OUTPUT"

    - name: Post comment to issue
      if: steps.find-issue.outputs.issue_number != ''
      run: |
        issue=${{ steps.find-issue.outputs.issue_number }}
        gh issue comment "$issue" --body-file COMMENT.md
